[
  {
    "name": "IE_Comments",
    "input": "<!--[if gte IE 4]><script>alert('XSS');</script><![endif]-->",
    "libxml": "&lt;!--[if gte IE 4]&gt;&lt;script&gt;alert('XSS');&lt;/script&gt;&lt;![endif]--&gt;"
  },

  {
    "name": "IE_Comments_2",
    "input": "<![if !IE 5]><script>alert('XSS');</script><![endif]>",
    "libxml_lte_2.9.13": "&lt;script&gt;alert('XSS');&lt;/script&gt;",
    "libxml_gte_2.9.14": "&lt;![if !IE 5]&gt;&lt;script&gt;alert('XSS');&lt;/script&gt;&lt;![endif]&gt;",
    "libgumbo": "&lt;!--[if !IE 5]--&gt;&lt;script&gt;alert('XSS');&lt;/script&gt;&lt;!--[endif]--&gt;"
  },

  {
    "name": "allow_colons_in_path_component",
    "input": "<a href=\"./this:that\">foo</a>",
    "libxml": "<a href='./this:that'>foo</a>"
  },

  {
    "name": "background_attribute",
    "input": "<div background=\"javascript:alert('XSS')\"></div>",
    "libxml": "<div></div>"
  },

  {
    "name": "bgsound",
    "input": "<bgsound src=\"javascript:alert('XSS');\" />",
    "libxml": "&lt;bgsound src='javascript:alert('XSS');'&gt;&lt;/bgsound&gt;",
    "libgumbo": "&lt;bgsound src='javascript:alert('XSS');'&gt;"
  },

  {
    /* original */
    "name": "div_background_image_unicode_encoded",
    "input": "<div style=\"background-image:\u00a5\u00a2\u006C\u0028'\u006a\u0061\u00a6\u0061\u00a3\u0063\u00a2\u0069\u00a0\u00a4\u003a\u0061\u006c\u0065\u00a2\u00a4\u0028.1027\u0058.1053\u0053\u0027\u0029'\u0029\">foo</div>",
    "libxml": "<div>foo</div>"
  },

  {
    /* from https://owasp.org/www-community/xss-filter-evasion-cheatsheet */
    "name": "div_background_image_unicode_encoded2",
    "input": "<DIV STYLE=\"background-image:\u0075\u0072\u006C\u0028'\u006a\u0061\u0076\u0061\u0073\u0063\u0072\u0069\u0070\u0074\u003a\u0061\u006c\u0065\u0072\u0074\u0028.1027\u0058.1053\u0053\u0027\u0029'\u0029\">foo</div>",
    "libxml": "<div>foo</div>"
  },

  {
    /* uh, fix what appear to be typos that have propagated over the years */
    "name": "div_background_image_unicode_encoded3",
    "input": "<DIV STYLE=\"background-image:\u0075\u0072\u006C\u0028'\u006a\u0061\u0076\u0061\u0073\u0063\u0072\u0069\u0070\u0074\u003a\u0061\u006c\u0065\u0072\u0074\u0028\u0027\u0058\u0053\u0053\u0027\u0029'\u0029\">foo</div>",
    "libxml": "<div>foo</div>"
  },

  {
    /* and finally a version that has a chance of actually demonstrating a javascript vulnerability */
    "name": "div_background_image_unicode_encoded4",
    "input": "<DIV STYLE=\"background-image:\u0075\u0072\u006C\u0028\u0027\u006a\u0061\u0076\u0061\u0073\u0063\u0072\u0069\u0070\u0074\u003a\u0061\u006c\u0065\u0072\u0074\u0028\u0031\u0032\u0033\u0034\u0029\u0027\u0029\">foo</div>",
    "libxml": "<div>foo</div>"
  },

  {
    /* and put that version into a CSS hex-encoded string */
    "name": "div_background_image_unicode_encoded5",
    "input": "<DIV STYLE=\"background-image:\\0075\\0072\\006C\\0028\\0027\\006a\\0061\\0076\\0061\\0073\\0063\\0072\\0069\\0070\\0074\\003a\\0061\\006c\\0065\\0072\\0074\\0028\\0031\\0032\\0033\\0034\\0029\\0027\\0029\">foo</div>",
    "libxml": "<div>foo</div>"
  },

  {
    /* and again without encoding the parens */
    "name": "div_background_image_unicode_encoded6",
    "input": "<DIV STYLE=\"background-image:\\0075\\0072\\006C(\\0027\\006a\\0061\\0076\\0061\\0073\\0063\\0072\\0069\\0070\\0074\\003a\\0061\\006c\\0065\\0072\\0074\\0028\\0031\\0032\\0033\\0034\\0029\\0027)\">foo</div>",
    "libxml": "<div>foo</div>"
  },

  {
    "name": "div_expression",
    "input": "<div style=\"width: expression(alert('XSS'));\">foo</div>",
    "libxml": "<div>foo</div>"
  },

  {
    "name": "double_open_angle_brackets",
    "input": "<img src=http://ha.ckers.org/scriptlet.html <",
    "libxml": "<img src='http://ha.ckers.org/scriptlet.html'>",
    "libgumbo": "", /* it is indeed the empty result, see next test for a better test */
    "jruby": "<img src='http://ha.ckers.org/scriptlet.html'>&lt;"
  },

  {
    "name": "double_open_angle_brackets v2",
    "input": "<div><img src=http://ha.ckers.org/scriptlet.html < </div>",
    "libxml": "<div><img src='http://ha.ckers.org/scriptlet.html'></div>",
    "jruby": "<div><img src='http://ha.ckers.org/scriptlet.html'>&lt; </div>"
  },

  {
    "name": "double_open_angle_brackets_2",
    "input": "<script src=http://ha.ckers.org/scriptlet.html <",
    "libxml": "&lt;script src=\"http://ha.ckers.org/scriptlet.html\"&gt;&lt;/script&gt;",
    "libgumbo": "", /* it is indeed empty */
    "jruby": "&lt;script src='http://ha.ckers.org/scriptlet.html'&gt;&lt;&lt;/script&gt;"
  },

  {
    "name": "double_open_angle_brackets_2 v2",
    "input": "<div><script src=http://ha.ckers.org/scriptlet.html < </div>",
    "libxml": "<div>&lt;script src=\"http://ha.ckers.org/scriptlet.html\"&gt;&lt;/script&gt;</div>",
    "libgumbo": "<div>&lt;script src='http://ha.ckers.org/scriptlet.html' &lt;='' div=''&gt;&lt;/script&gt;</div>",
    "jruby": "<div>&lt;script src='http://ha.ckers.org/scriptlet.html'&gt;&lt; &lt;/div&gt;&lt;/script&gt;</div>"
  },

  {
    "name": "grave_accents",
    "input": "<img src=`javascript:alert('XSS')` />",
    "libxml": "<img>"
  },

  {
    "name": "img_dynsrc_lowsrc",
    "input": "<img dynsrc=\"javascript:alert('XSS')\" />",
    "libxml": "<img>"
  },

  {
    "name": "img_vbscript",
    "input": "<img src='vbscript:msgbox(\"XSS\")' />",
    "libxml": "<img>"
  },

  {
    "name": "input_image",
    "input": "<input type=\"image\" src=\"javascript:alert('XSS');\" />",
    "libxml": "<input type='image'>"
  },

  {
    "name": "link_stylesheets",
    "input": "<link rel=\"stylesheet\" href=\"javascript:alert('XSS');\" />",
    "libxml": "&lt;link rel=\"stylesheet\" href=\"javascript:alert('XSS');\"&gt;",
    "jruby": "&lt;link href='javascript:alert('XSS');' rel='stylesheet'&gt;"
  },

  {
    "name": "link_stylesheets_2",
    "input": "<link rel=\"stylesheet\" href=\"http://ha.ckers.org/xss.css\" />",
    "libxml": "&lt;link rel=\"stylesheet\" href=\"http://ha.ckers.org/xss.css\"&gt;",
    "jruby": "&lt;link href='http://ha.ckers.org/xss.css' rel='stylesheet'&gt;"
  },

  {
    "name": "list_style_image",
    "input": "<li style=\"list-style-image: url(javascript:alert('XSS'))\">foo</li>",
    "libxml": "<li>foo</li>"
  },

  {
    "name": "no_closing_script_tags",
    "input": "<script src=http://ha.ckers.org/xss.js?<b>",
    "libxml": "&lt;script src=\"http://ha.ckers.org/xss.js?&amp;lt;b\"&gt;&lt;/script&gt;",
    "libgumbo": "&lt;script src='http://ha.ckers.org/xss.js?&lt;b'&gt;&lt;/script&gt;"
  },

  {
    "name": "non_alpha_non_digit",
    "input": "<script/XSS src=\"http://ha.ckers.org/xss.js\"></script>",
    "libxml": "&lt;script src=\"http://ha.ckers.org/xss.js\"&gt;&lt;/script&gt;",
    "libgumbo": "&lt;script xss='' src='http://ha.ckers.org/xss.js'&gt;&lt;/script&gt;",
    "jruby": "&lt;script&gt;&lt;/script&gt;"
  },

  {
    "name": "non_alpha_non_digit_2",
    "input": "<a onclick!\\#$%&()*~+-_.,:;?@[/|\\]^`=alert(\"XSS\")>foo</a>",
    "libxml": "<a>foo</a>"
  },

  {
    "name": "non_alpha_non_digit_3",
    "input": "<img/src=\"http://ha.ckers.org/xss.js\"/>",
    "libxml": "<img>",
    "libgumbo": "<img src='http://ha.ckers.org/xss.js'>" /* see "should_allow_image_src_attribute" test */
  },

  {
    "name": "non_alpha_non_digit_II",
    "input": "<a href!\\#$%&()*~+-_.,:;?@[/|]^`=alert('XSS')>foo</a>",
    "libxml": "<a>foo</a>"
  },

  {
    "name": "non_alpha_non_digit_III",
    "input": "<a/href=\"javascript:alert('XSS');\">foo</a>",
    "libxml": "<a>foo</a>"
  },

  {
    "name": "platypus",
    "input": "<a href=\"http://www.ragingplatypus.com/\" style=\"display:block; position:absolute; left:0; top:0; width:100%; height:100%; z-index:1; background-color:black; background-image:url(http://www.ragingplatypus.com/i/cam-full.jpg); background-x:center; background-y:center; background-repeat:repeat;\">never trust your upstream platypus</a>",
    "libxml": "<a href='http://www.ragingplatypus.com/' style='display:block;width:100%;height:100%;background-color:black;background-x:center;background-y:center;'>never trust your upstream platypus</a>"
  },

  {
    "name": "protocol_resolution_in_script_tag",
    "input": "<script src=//ha.ckers.org/.j></script>",
    "libxml": "&lt;script src=\"//ha.ckers.org/.j\"&gt;&lt;/script&gt;"
  },

  {
    "name": "should_allow_anchors",
    "input": "<a href='foo' onclick='bar'><script>baz</script></a>",
    "libxml": "<a href='foo'>&lt;script&gt;baz&lt;/script&gt;</a>"
  },

  {
    "name": "should_allow_image_alt_attribute",
    "input": "<img alt='foo' onclick='bar' />",
    "libxml": "<img alt='foo'>"
  },

  {
    "name": "should_allow_image_height_attribute",
    "input": "<img height='foo' onclick='bar' />",
    "libxml": "<img height='foo'>"
  },

  {
    "name": "should_allow_image_src_attribute",
    "input": "<img src='foo' onclick='bar' />",
    "libxml": "<img src='foo'>"
  },

  {
    "name": "should_allow_image_width_attribute",
    "input": "<img width='foo' onclick='bar' />",
    "libxml": "<img width='foo'>"
  },

  {
    "name": "should_handle_blank_text",
    "input": "",
    "libxml": ""
  },

  {
    "name": "should_handle_malformed_image_tags",
    "input": "<img \"\"\"><script>alert(\"XSS\")</script>\">",
    "libxml": "<img>&lt;script&gt;alert(\"XSS\")&lt;/script&gt;\"&gt;"
  },

  {
    "name": "should_handle_non_html",
    "input": "abc",
    "libxml": "abc"
  },

  {
    "name": "should_not_fall_for_ridiculous_hack",
    "input": "<img\nsrc\n=\n\"\nj\na\nv\na\ns\nc\nr\ni\np\nt\n:\na\nl\ne\nr\nt\n(\n'\nX\nS\nS\n'\n)\n\"\n />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_0",
    "input": "<img src=\"javascript:alert('XSS');\" />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_1",
    "input": "<img src=javascript:alert('XSS') />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_10",
    "input": "<img src=\"jav&#x0A;ascript:alert('XSS');\" />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_11",
    "input": "<img src=\"jav&#x0D;ascript:alert('XSS');\" />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_12",
    "input": "<img src=\" &#14;  javascript:alert('XSS');\" />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_13",
    "input": "<img src=\"&#x20;javascript:alert('XSS');\" />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_14",
    "input": "<img src=\"&#xA0;javascript:alert('XSS');\" />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_2",
    "input": "<img src=\"JaVaScRiPt:alert('XSS')\" />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_3",
    "input": "<img src='javascript:alert(&quot;XSS&quot;)' />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_4",
    "input": "<img src='javascript:alert(String.fromCharCode(88,83,83))' />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_5",
    "input": "<img src='&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;' />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_6",
    "input": "<img src='&#0000106;&#0000097;&#0000118;&#0000097;&#0000115;&#0000099;&#0000114;&#0000105;&#0000112;&#0000116;&#0000058;&#0000097;&#0000108;&#0000101;&#0000114;&#0000116;&#0000040;&#0000039;&#0000088;&#0000083;&#0000083;&#0000039;&#0000041' />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_7",
    "input": "<img src='&#x6A;&#x61;&#x76;&#x61;&#x73;&#x63;&#x72;&#x69;&#x70;&#x74;&#x3A;&#x61;&#x6C;&#x65;&#x72;&#x74;&#x28;&#x27;&#x58;&#x53;&#x53;&#x27;&#x29' />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_8",
    "input": "<img src=\"jav\tascript:alert('XSS');\" />",
    "libxml": "<img>"
  },

  {
    "name": "should_not_fall_for_xss_image_hack_9",
    "input": "<img src=\"jav&#x09;ascript:alert('XSS');\" />",
    "libxml": "<img>"
  },

  {
    "name": "should_sanitize_half_open_scripts",
    "input": "<img src=\"javascript:alert('XSS')\"",
    "libxml": "<img>",
    "libgumbo": "" /* indeed it is empty */
  },

  {
    "name": "should_sanitize_half_open_scripts 2",
    "input": "<div><img src=\"javascript:alert('XSS')\" </div>",
    "libxml": "<div><img></div>"
  },

  {
    "name": "should_sanitize_invalid_script_tag",
    "input": "<script/XSS SRC=\"http://ha.ckers.org/xss.js\"></script>",
    "libxml": "&lt;script src=\"http://ha.ckers.org/xss.js\"&gt;&lt;/script&gt;",
    "libgumbo": "&lt;script xss='' src='http://ha.ckers.org/xss.js'&gt;&lt;/script&gt;",
    "jruby": "&lt;script&gt;&lt;/script&gt;"
  },

  {
    "name": "should_sanitize_script_tag_with_multiple_open_brackets",
    "input": "<<script>alert(\"XSS\");//<</script>",
    "libxml": "&lt;&lt;script&gt;alert('XSS');//&lt;&lt;/script&gt;"
  },

  {
    "name": "should_sanitize_script_tag_with_multiple_open_brackets_2a",
    "input": "<iframe src=http://ha.ckers.org/scriptlet.html\n<",
    "libxml": "&lt;iframe src=\"http://ha.ckers.org/scriptlet.html\"&gt;&lt;/iframe&gt;",
    "libgumbo": "", /* it is indeed empty, see next test */
    "jruby": "&lt;iframe src='http://ha.ckers.org/scriptlet.html'&gt;&amp;lt;&lt;/iframe&gt;"
  },

  {
    "name": "should_sanitize_script_tag_with_multiple_open_brackets_2b",
    "input": "<div><iframe src=http://ha.ckers.org/scriptlet.html\n< </div>",
    "libxml": "<div>&lt;iframe src=\"http://ha.ckers.org/scriptlet.html\"&gt;&lt;/iframe&gt;</div>",
    "libgumbo": "<div>&lt;iframe src='http://ha.ckers.org/scriptlet.html' &lt;='' div=''&gt;&lt;/iframe&gt;</div>",
    "jruby": "<div>&lt;iframe src='http://ha.ckers.org/scriptlet.html'&gt;&amp;lt; &amp;lt;/div&amp;gt;&lt;/iframe&gt;</div>"
  },

  {
    "name": "should_sanitize_tag_broken_up_by_null",
    "input": "<scr\u0000ipt>alert(\"XSS\")</scr\u0000ipt>",
    "libxml": "&lt;scr&gt;&lt;/scr&gt;",
    "libgumbo": "&lt;scr�ipt&gt;alert('XSS')&lt;/scr�ipt&gt;",
    "jruby": "&lt;scr \u0000ipt=''&gt;alert('XSS')&lt;/scr&gt;"
  },

  {
    "name": "should_sanitize_unclosed_script",
    "input": "<script src=http://ha.ckers.org/xss.js?<b>",
    "libxml": "&lt;script src=\"http://ha.ckers.org/xss.js?&amp;lt;b\"&gt;&lt;/script&gt;",
    "libgumbo": "&lt;script src='http://ha.ckers.org/xss.js?&lt;b'&gt;&lt;/script&gt;"
  },

  {
    "name": "should_strip_href_attribute_in_a_with_bad_protocols",
    "input": "<a href=\"javascript:XSS\" title=\"1\">boo</a>",
    "libxml": "<a title='1'>boo</a>"
  },

  {
    "name": "should_strip_href_attribute_in_a_with_bad_protocols_and_whitespace",
    "input": "<a href=\" javascript:XSS\" title=\"1\">boo</a>",
    "libxml": "<a title='1'>boo</a>"
  },

  {
    "name": "should_strip_src_attribute_in_img_with_bad_protocols",
    "input": "<img src=\"javascript:XSS\" title=\"1\">boo</img>",
    "libxml": "<img title='1'>boo"
  },

  {
    "name": "should_strip_src_attribute_in_img_with_bad_protocols_and_whitespace",
    "input": "<img src=\" javascript:XSS\" title=\"1\">boo</img>",
    "libxml": "<img title='1'>boo"
  },

  {
    "name": "xml_base",
    "input": "<div xml:base=\"javascript:alert('XSS');//\">foo</div>",
    "libxml": "<div>foo</div>"
  },

  {
    "name": "xul",
    "input": "<p style=\"-moz-binding:url('http://ha.ckers.org/xssmoz.xml#xss')\">fubar</p>",
    "libxml": "<p>fubar</p>"
  },

  {
    "name": "quotes_in_attributes",
    "input": "<img src='foo' title='\"foo\" bar' />",
    "libxml": "<img src='foo' title='\"foo\" bar'>",
    "libgumbo": "<img src='foo' title='&quot;foo&quot; bar'>",
    "jruby": "<img src='foo' title='%22foo%22 bar'>"
  },

  {
    "name": "uri_refs_in_svg_attributes",
    "input": "<rect fill='url(#foo)' />",
    "libxml": "<rect fill='url(#foo)'></rect>"
  },

  {
    "name": "absolute_uri_refs_in_svg_attributes",
    "input": "<rect fill='url(http://bad.com/) #fff' />",
    "libxml": "<rect fill='#fff'></rect>"
  },

  {
    "name": "uri_ref_with_space_in svg_attribute",
    "input": "<rect fill='url(\n#foo)' />",
    "libxml": "<rect fill='url(\n#foo)'></rect>",
    "jruby": "<rect fill='url(&#10;#foo)'></rect>"
  },

  {
    "name": "absolute_uri_ref_with_space_in svg_attribute",
    "input": "<rect fill=\"url(\nhttp://bad.com/)\" />",
    "libxml": "<rect></rect>"
  },

  {
    "name": "allow_html5_image_tag",
    "input": "<image src='foo' />",
    "libxml": "&lt;image src=\"foo\"&gt;&lt;/image&gt;",
    "libgumbo": "<img src='foo'>",
    "jruby": "&lt;image src='foo'&gt;"
  },

  {
    "name": "style_attr_end_with_nothing",
    "input": "<div style=\"color: blue\" />",
    "libxml": "<div style='color:blue;'></div>"
  },

  {
    "name": "style_attr_end_with_space",
    "input": "<div style=\"color: blue \" />",
    "libxml": "<div style='color:blue;'></div>"
  },

  {
    "name": "style_attr_end_with_semicolon",
    "input": "<div style=\"color: blue;\" />",
    "libxml": "<div style='color:blue;'></div>"
  },

  {
    "name": "style_attr_end_with_semicolon_space",
    "input": "<div style=\"color: blue; \" />",
    "libxml": "<div style='color:blue;'></div>"
  },

  {
    "name": "style_attr_shorthand_important",
    "input": "<div style=\"border: 2px dashed gray !important;\" />",
    "libxml": "<div style='border:2px dashed gray !important;'></div>"
  },

  {
    "name": "attributes_with_embedded_quotes",
    "input": "<img src=doesntexist.jpg\"'onerror=\"alert(1) />",
    "libxml": "<img src='doesntexist.jpg%22'onerror=%22alert(1)'>"
  },

  {
    "name": "attributes_with_embedded_quotes_II",
    "input": "<img src=notthere.jpg\"\"onerror=\"alert(2) />",
    "libxml": "<img src='notthere.jpg%22%22onerror=%22alert(2)'>"
  }
]
